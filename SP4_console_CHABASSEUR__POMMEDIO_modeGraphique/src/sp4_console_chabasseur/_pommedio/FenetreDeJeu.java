/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sp4_console_chabasseur._pommedio;

import java.util.Random;
import java.util.Scanner;

/**
 *
 * @author solal
 */
public class FenetreDeJeu extends javax.swing.JFrame {

    private joueur[] listeJoueurs = new joueur[2];
    private joueur joueurCourant = listeJoueurs[0];
    private PlateauDeJeu plateau = new PlateauDeJeu();

    /**
     * Creates new form FenetreDeJeu
     */
    public FenetreDeJeu() {
        initComponents();
        panneau_info_joueurs.setVisible(false);
        panneau_info_partie.setVisible(false);

        for (int i = 5; i >= 0; i--) {
            for (int j = 0; j < 7; j++) {
                CelluleGraphique cellGraph = new CelluleGraphique(plateau.grille[i][j]);

                cellGraph.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        
                        CelluleDeGrille c = cellGraph.celluleAssociee;
                        if (c.presenceJeton() == false) {
                            return;
                        }
                        if (c.lireCouleurDuJeton() == joueurCourant.getCouleur()) {
                            textMessage.setText("Le joueur " + joueurCourant.getNom() + " récupère un de ses jeton.");
                            c.supprimerJeton();           //
                            joueurCourant.ajouterJetons(new Jeton(joueurCourant.getCouleur()));
                            panneau_grille.repaint();
                            for (int k = 0; k < 7; k++) {
                                plateau.tasserColonne(k);   
                            }
                            DebloquerBoutonColonne();
                            if(checkWin()==true){
                                Rejouer();
                            }
                            joueurSuivant();
                        } else {
                            if(joueurCourant.utiliserDesintegrateur()==true){
                                textMessage.setText("Le joueur " + joueurCourant.getNom() + " veut désintégrer un jeton.");
                                c.supprimerJeton();
                                lbl_j1_desint.setText(listeJoueurs[0].getNombreDesintegrateurs() + "");
                                lbl_j2_desint.setText(listeJoueurs[1].getNombreDesintegrateurs() + "");
                                panneau_grille.repaint();
                            for (int k = 0; k < 7; k++) {
                                plateau.tasserColonne(k); 
                            }
                            DebloquerBoutonColonne();
                            if(checkWin()==true){
                                Rejouer();
                            }
                            joueurSuivant();
                            
                        }else{
                               textMessage.setText("Le joueur " + joueurCourant.getNom() + " n'a pas de désintégrateur!.");
                               
                            }
                            
                        }
                    }
                    
                });

                panneau_grille.add(cellGraph);
                panneau_grille.repaint();
                
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panneau_grille = new javax.swing.JPanel();
        panneau_creation_partie = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nom_joueur_1 = new javax.swing.JTextField();
        nom_joueur_2 = new javax.swing.JTextField();
        btn_start = new javax.swing.JButton();
        panneau_info_joueurs = new javax.swing.JPanel();
        lbl_j1_desint = new javax.swing.JLabel();
        lbl_j1_nom = new javax.swing.JLabel();
        lbl_j1_couleur = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        lbl_j2_desint = new javax.swing.JLabel();
        lbl_j2_couleur = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lbl_j2_nom = new javax.swing.JLabel();
        panneau_info_partie = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lbl_jcourant = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textMessage = new javax.swing.JTextArea();
        btn_col_7 = new javax.swing.JButton();
        btn_col_1 = new javax.swing.JButton();
        btn_col_2 = new javax.swing.JButton();
        btn_col_3 = new javax.swing.JButton();
        btn_col_4 = new javax.swing.JButton();
        btn_col_5 = new javax.swing.JButton();
        btn_col_6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panneau_grille.setBackground(new java.awt.Color(255, 255, 255));
        panneau_grille.setLayout(new java.awt.GridLayout(6, 7));
        getContentPane().add(panneau_grille, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 672, 576));

        panneau_creation_partie.setBackground(new java.awt.Color(153, 255, 153));
        panneau_creation_partie.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Nom Joueur 2 :");
        panneau_creation_partie.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        jLabel2.setText("Nom Joueur 1 :");
        panneau_creation_partie.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        nom_joueur_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nom_joueur_1ActionPerformed(evt);
            }
        });
        panneau_creation_partie.add(nom_joueur_1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 100, -1));

        nom_joueur_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nom_joueur_2ActionPerformed(evt);
            }
        });
        panneau_creation_partie.add(nom_joueur_2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 100, -1));

        btn_start.setText("Démarrer partie");
        btn_start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_startActionPerformed(evt);
            }
        });
        panneau_creation_partie.add(btn_start, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, 120, -1));

        getContentPane().add(panneau_creation_partie, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 90, 290, 110));

        panneau_info_joueurs.setBackground(new java.awt.Color(153, 255, 153));
        panneau_info_joueurs.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl_j1_desint.setText("nbdesintjoueur1 ");
        panneau_info_joueurs.add(lbl_j1_desint, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 100, -1, -1));

        lbl_j1_nom.setText("nomjoueur1");
        panneau_info_joueurs.add(lbl_j1_nom, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, -1, -1));

        lbl_j1_couleur.setText("couleurjoueur1");
        panneau_info_joueurs.add(lbl_j1_couleur, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 80, -1, -1));

        jLabel7.setText("Joueur 1 : ");
        panneau_info_joueurs.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        jLabel8.setText("Couleur : ");
        panneau_info_joueurs.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        jLabel9.setText("Desintégrateurs : ");
        panneau_info_joueurs.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));
        panneau_info_joueurs.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 230, 20));

        lbl_j2_desint.setText("nbdesintjoueur2 ");
        panneau_info_joueurs.add(lbl_j2_desint, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 190, -1, -1));

        lbl_j2_couleur.setText("couleurjoueur2");
        panneau_info_joueurs.add(lbl_j2_couleur, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 170, -1, -1));

        jLabel11.setText("Couleur : ");
        panneau_info_joueurs.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, -1));

        jLabel12.setText("Desintégrateurs : ");
        panneau_info_joueurs.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        jLabel13.setText("Joueur 2 : ");
        panneau_info_joueurs.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Infos Joueurs :");
        panneau_info_joueurs.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        lbl_j2_nom.setText("nomjoueur2");
        panneau_info_joueurs.add(lbl_j2_nom, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 150, -1, -1));

        getContentPane().add(panneau_info_joueurs, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 220, 290, 240));

        panneau_info_partie.setBackground(new java.awt.Color(153, 255, 153));
        panneau_info_partie.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setText("Joueur courant : ");
        panneau_info_partie.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Infos Jeu :");
        panneau_info_partie.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        lbl_jcourant.setText("nomjoueur");
        panneau_info_partie.add(lbl_jcourant, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 50, -1, -1));

        textMessage.setColumns(20);
        textMessage.setRows(5);
        jScrollPane1.setViewportView(textMessage);

        panneau_info_partie.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 270, 80));

        getContentPane().add(panneau_info_partie, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 480, 290, 180));

        btn_col_7.setText("7");
        btn_col_7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_col_7ActionPerformed(evt);
            }
        });
        getContentPane().add(btn_col_7, new org.netbeans.lib.awtextra.AbsoluteConstraints(626, 50, -1, -1));

        btn_col_1.setText("1");
        btn_col_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_col_1ActionPerformed(evt);
            }
        });
        getContentPane().add(btn_col_1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, -1, -1));

        btn_col_2.setText("2");
        btn_col_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_col_2ActionPerformed(evt);
            }
        });
        getContentPane().add(btn_col_2, new org.netbeans.lib.awtextra.AbsoluteConstraints(145, 50, -1, -1));

        btn_col_3.setText("3");
        btn_col_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_col_3ActionPerformed(evt);
            }
        });
        getContentPane().add(btn_col_3, new org.netbeans.lib.awtextra.AbsoluteConstraints(242, 50, -1, -1));

        btn_col_4.setText("4");
        btn_col_4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_col_4ActionPerformed(evt);
            }
        });
        getContentPane().add(btn_col_4, new org.netbeans.lib.awtextra.AbsoluteConstraints(338, 50, -1, -1));

        btn_col_5.setText("5");
        btn_col_5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_col_5ActionPerformed(evt);
            }
        });
        getContentPane().add(btn_col_5, new org.netbeans.lib.awtextra.AbsoluteConstraints(434, 50, -1, -1));

        btn_col_6.setText("6");
        btn_col_6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_col_6ActionPerformed(evt);
            }
        });
        getContentPane().add(btn_col_6, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 50, -1, -1));

        setBounds(0, 0, 1044, 756);
    }// </editor-fold>//GEN-END:initComponents

    private void nom_joueur_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nom_joueur_1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nom_joueur_1ActionPerformed

    private void nom_joueur_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nom_joueur_2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nom_joueur_2ActionPerformed

    private void btn_col_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_col_1ActionPerformed
        // TODO add your handling code here:
        jouerDansColonne(0);
        if (plateau.colonneRemplie(0) == true) {
            btn_col_1.setEnabled(false);
        }
        joueurSuivant();
    }//GEN-LAST:event_btn_col_1ActionPerformed

    private void btn_startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_startActionPerformed
        // TODO add your handling code here:
        panneau_info_joueurs.setVisible(true);
        panneau_info_partie.setVisible(true);
        initialiserPartie();
        panneau_grille.repaint();
        btn_start.setEnabled(false);
        btn_col_1.setEnabled(true);
        btn_col_2.setEnabled(true);
        btn_col_3.setEnabled(true);
        btn_col_4.setEnabled(true);
        btn_col_5.setEnabled(true);
        btn_col_6.setEnabled(true);
        btn_col_7.setEnabled(true);
    }//GEN-LAST:event_btn_startActionPerformed

    private void btn_col_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_col_2ActionPerformed
        // TODO add your handling code here:
        jouerDansColonne(1);
        if (plateau.colonneRemplie(1) == true) {
            btn_col_2.setEnabled(false);
        }
        joueurSuivant();
    }//GEN-LAST:event_btn_col_2ActionPerformed

    private void btn_col_3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_col_3ActionPerformed
        // TODO add your handling code here:
        jouerDansColonne(2);
        if (plateau.colonneRemplie(2) == true) {
            btn_col_3.setEnabled(false);
        }
        joueurSuivant();
    }//GEN-LAST:event_btn_col_3ActionPerformed

    private void btn_col_4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_col_4ActionPerformed
        // TODO add your handling code here:
        jouerDansColonne(3);
        if (plateau.colonneRemplie(3) == true) {
            btn_col_4.setEnabled(false);
        }
        joueurSuivant();
    }//GEN-LAST:event_btn_col_4ActionPerformed

    private void btn_col_5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_col_5ActionPerformed
        // TODO add your handling code here:
        jouerDansColonne(4);
        if (plateau.colonneRemplie(4) == true) {
            btn_col_5.setEnabled(false);
        }
        joueurSuivant();
    }//GEN-LAST:event_btn_col_5ActionPerformed

    private void btn_col_6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_col_6ActionPerformed
        // TODO add your handling code here:
        jouerDansColonne(5);
        if (plateau.colonneRemplie(5) == true) {
            btn_col_6.setEnabled(false);
        }
        joueurSuivant();
    }//GEN-LAST:event_btn_col_6ActionPerformed

    private void btn_col_7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_col_7ActionPerformed
        // TODO add your handling code here:
        jouerDansColonne(6);
        if (plateau.colonneRemplie(6) == true) {
            btn_col_7.setEnabled(false);
        }
        joueurSuivant();
    }//GEN-LAST:event_btn_col_7ActionPerformed
    public boolean jouerDansColonne(int indice_colonne) {
        int NumLigneJouer;
        NumLigneJouer = plateau.ajouterJetonDansColonne(joueurCourant.jouerJeton(), indice_colonne);
        panneau_grille.repaint();
       
            if (plateau.presenceTrouNoir(NumLigneJouer, indice_colonne) == true) {
                plateau.activerTrouNoir(NumLigneJouer, indice_colonne);
            }
            if (plateau.presenceDesintegrateur(NumLigneJouer, indice_colonne) == true) {
                joueurCourant.obtenirDesintegrateur();
                plateau.supprimerDesintegrateur(NumLigneJouer, indice_colonne);
                lbl_j1_desint.setText(listeJoueurs[0].getNombreDesintegrateurs() + "");
                lbl_j2_desint.setText(listeJoueurs[1].getNombreDesintegrateurs() + "");
            }
        
        if (checkWin()==true){
            Rejouer();
        }
        
        
        if (plateau.grilleRemplie() == true) {
            textMessage.setText("Fin de partie, la grille est remplie. \nCliquez sur démarrer partie pour rejouer.");
            Rejouer();
            return false;
        }
        

        return true;
    }
    public boolean checkWin(){
        if (plateau.etreGagnantePourCouleur(listeJoueurs[0].getCouleur()) == true && plateau.etreGagnantePourCouleur(listeJoueurs[1].getCouleur()) == true) {
            plateau.afficherGrilleSurConsole();
            if (joueurCourant == listeJoueurs[0]) {
                textMessage.setText("Victoire de " + listeJoueurs[1].getNom() + " par faute de jeu de l'adversaire. \nCliquez sur démarrer partie pour rejouer.");
               return true;
            } else {
                textMessage.setText("Victoire de " + listeJoueurs[0].getNom() + " par faute de jeu de l'adversaire. \nCliquez sur démarrer partie pour rejouer.");
              return true;
            }
        }
        if (plateau.etreGagnantePourCouleur(joueurCourant.getCouleur()) == true) {
            plateau.afficherGrilleSurConsole();
            textMessage.setText("Victoire de " + joueurCourant.getNom()+". \nCliquez sur démarrer partie pour rejouer.");
            return true;
    }
        return false;
    }
    
    public void Rejouer(){
        btn_col_1.setEnabled(false);
        btn_col_2.setEnabled(false);
        btn_col_3.setEnabled(false);
        btn_col_4.setEnabled(false);
        btn_col_5.setEnabled(false);
        btn_col_6.setEnabled(false);
        btn_col_7.setEnabled(false);
        btn_start.setEnabled(true);
    }

    public void joueurSuivant() {
        if (joueurCourant == listeJoueurs[0]) {
            joueurCourant = listeJoueurs[1];
        } else {
            joueurCourant = listeJoueurs[0];
        }
        lbl_jcourant.setText(joueurCourant.getNom());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FenetreDeJeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FenetreDeJeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FenetreDeJeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FenetreDeJeu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FenetreDeJeu().setVisible(true);
            }
        });
    }

    public void initialiserPartie() {
        plateau.viderGrille();

        String nomJoueur1 = nom_joueur_1.getText();
        joueur J1 = new joueur(nomJoueur1);
        String nomJoueur2 = nom_joueur_2.getText();
        joueur J2 = new joueur(nomJoueur2);
        listeJoueurs[0] = J1;
        listeJoueurs[1] = J2;

        attribuerCouleursAuxJoueurs();
        creerEtAffecterJeton(listeJoueurs[0]);
        creerEtAffecterJeton(listeJoueurs[1]);
        placerTrousNoirsEtDesintegrateurs();

        Random r = new Random();
        boolean le_premier = r.nextBoolean();
        if (le_premier) {
            joueurCourant = listeJoueurs[0];
        } else {
            joueurCourant = listeJoueurs[1];
        }

        lbl_j1_nom.setText(nomJoueur1);
        lbl_j2_nom.setText(nomJoueur2);
        lbl_j1_couleur.setText(J1.getCouleur());
        lbl_j2_couleur.setText(J2.getCouleur());
        lbl_j1_desint.setText(J1.getNombreDesintegrateurs() + "");
        lbl_j2_desint.setText(J2.getNombreDesintegrateurs() + "");
        textMessage.setText("");
        lbl_jcourant.setText(joueurCourant.getNom());

    }

    public void attribuerCouleursAuxJoueurs() {
        double alea = Math.random(); //Math.random génére un double aléatoire entre 0 et 1   
        if (alea < 0.51) {       //une chance sur 2 d'etre inferieur a 0,5
            listeJoueurs[0].affecterCouleur("Rouge");
            listeJoueurs[1].affecterCouleur("Jaune");
        } else {
            listeJoueurs[0].affecterCouleur("Jaune");
            listeJoueurs[1].affecterCouleur("Rouge");
        }
    }

    public void creerEtAffecterJeton(joueur Joueur) {
        for (int i = 0; i < 30; i++) {
            Joueur.ajouterJetons(new Jeton(Joueur.getCouleur()));
        }
    }

    public void placerTrousNoirsEtDesintegrateurs() {
        Random r = new Random();
        int i = 0;
        int j = 0;
        int z = 0;
        while (i != 3) {
            int ligne = r.nextInt(6);
            int col = r.nextInt(7);
            if (plateau.presenceTrouNoir(ligne, col) == false && plateau.presenceDesintegrateur(ligne, col) == false) {
                plateau.placerTrouNoir(ligne, col);
                plateau.placerDesintegrateur(ligne, col);
                i += 1;
            }
        }
        while (j != 2) {
            int ligne = r.nextInt(6);
            int col = r.nextInt(7);
            if (plateau.presenceTrouNoir(ligne, col) == false || plateau.presenceDesintegrateur(ligne, col) == false) {
                plateau.placerTrouNoir(ligne, col);
                j += 1;
            }
        }

        while (z != 2) {
            int ligne = r.nextInt(6);
            int col = r.nextInt(7);
            if (plateau.presenceTrouNoir(ligne, col) == false || plateau.presenceDesintegrateur(ligne, col) == false) {
                plateau.placerDesintegrateur(ligne, col);
                z += 1;
            }
        }
    }
    public void DebloquerBoutonColonne() {
        for (int i = 0; i<7; i++) {
            if (plateau.colonneRemplie(i) == false) {
                if (i == 0) {
                    if (btn_col_1.isEnabled() == false) {
                        btn_col_1.setEnabled(true);
                    }
                }
                if (i == 1) {
                    if (btn_col_2.isEnabled() == false) {
                        btn_col_2.setEnabled(true);
                    }
                }
                if (i == 2) {
                    if (btn_col_3.isEnabled() == false) {
                        btn_col_3.setEnabled(true);
                    }
                }
                if (i == 3) {
                    if (btn_col_4.isEnabled() == false) {
                        btn_col_4.setEnabled(true);
                    }
                }
                if (i == 4) {
                    if (btn_col_5.isEnabled() == false) {
                        btn_col_5.setEnabled(true);
                    }
                }
                if (i == 5) {
                    if (btn_col_6.isEnabled() == false) {
                        btn_col_6.setEnabled(true);
                    }
                }
                if (i == 6) {
                    if (btn_col_7.isEnabled() == false) {
                        btn_col_7.setEnabled(true);
                    }
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_col_1;
    private javax.swing.JButton btn_col_2;
    private javax.swing.JButton btn_col_3;
    private javax.swing.JButton btn_col_4;
    private javax.swing.JButton btn_col_5;
    private javax.swing.JButton btn_col_6;
    private javax.swing.JButton btn_col_7;
    private javax.swing.JButton btn_start;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbl_j1_couleur;
    private javax.swing.JLabel lbl_j1_desint;
    private javax.swing.JLabel lbl_j1_nom;
    private javax.swing.JLabel lbl_j2_couleur;
    private javax.swing.JLabel lbl_j2_desint;
    private javax.swing.JLabel lbl_j2_nom;
    private javax.swing.JLabel lbl_jcourant;
    private javax.swing.JTextField nom_joueur_1;
    private javax.swing.JTextField nom_joueur_2;
    private javax.swing.JPanel panneau_creation_partie;
    private javax.swing.JPanel panneau_grille;
    private javax.swing.JPanel panneau_info_joueurs;
    private javax.swing.JPanel panneau_info_partie;
    private javax.swing.JTextArea textMessage;
    // End of variables declaration//GEN-END:variables
}
